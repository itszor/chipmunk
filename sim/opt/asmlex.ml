# 3 "opt/asmlex.mll"
 
  let trim = function
      s -> String.sub s 1 ((String.length s) - 2)

  let unquote = function
    s -> 
	   let trimmed = trim s in
	   let len = String.length trimmed in
	   let qtype_len = String.index trimmed ':' in
	   let quote_type = String.sub trimmed 0 qtype_len in
	   let quote_val = String.sub trimmed (qtype_len + 1) (len - (qtype_len + 1))
     in
	     let upper_type = "ANTI_" ^ (String.uppercase quote_type) in
	       (upper_type, quote_val)

# 18 "opt/asmlex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\252\255\185\255\017\000\253\255\000\000\029\000\002\000\
    \013\000\030\000\036\000\003\000\027\000\024\000\007\000\047\000\
    \037\000\051\000\048\000\054\000\194\255\054\000\118\000\192\000\
    \250\000\052\001\110\001\168\001\226\001\028\002\186\255\187\255\
    \188\255\189\255\190\255\191\255\192\255\003\000\012\000\022\000\
    \056\000\055\000\000\000\027\000\143\000\193\255\057\000\052\000\
    \057\000\059\000\068\000\232\255\250\255\205\255\197\255\196\255\
    \063\000\072\000\199\255\198\255\224\255\216\255\070\000\204\255\
    \203\255\202\255\214\255\249\255\248\255\061\000\201\255\243\255\
    \071\000\072\000\075\000\071\000\090\000\076\000\206\255\077\000\
    \221\255\090\000\234\255\073\000\236\255\098\000\084\000\207\255\
    \083\000\100\000\097\000\095\000\208\255\223\255\215\255\099\000\
    \213\255\100\000\228\255\101\000\231\255\090\000\107\000\091\000\
    \209\255\239\255\246\255\099\000\097\000\210\255\098\000\104\000\
    \099\000\211\255\106\000\212\255\222\255\116\000\111\000\220\255\
    \219\255\242\255\117\000\110\000\120\000\225\255\119\000\227\255\
    \235\255\120\000\233\255\105\000\122\000\226\255\111\000\126\000\
    \112\000\129\000\128\000\229\255\131\000\230\255\245\255\247\255\
    \120\000\244\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\001\000\255\255\070\000\070\000\002\000\
    \070\000\002\000\070\000\070\000\000\000\002\000\070\000\070\000\
    \002\000\002\000\070\000\060\000\255\255\070\000\070\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\055\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\038\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\037\000\
    \255\255\015\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\017\000\255\255\
    \255\255\004\000\255\255\255\255\018\000\255\255\255\255\255\255\
    \255\255\255\255\014\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\044\000\044\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\255\255\000\000\
    \000\000\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\000\000\000\000\
    \255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\004\000\000\000\004\000\021\000\000\000\000\000\000\000\
    \000\000\000\000\004\000\000\000\004\000\004\000\004\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\043\000\004\000\004\000\000\000\004\000\255\255\
    \004\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\000\000\004\000\000\000\000\000\
    \022\000\006\000\009\000\010\000\007\000\016\000\004\000\018\000\
    \004\000\005\000\011\000\131\000\017\000\008\000\019\000\144\000\
    \047\000\046\000\012\000\013\000\014\000\015\000\004\000\004\000\
    \107\000\085\000\020\000\004\000\122\000\004\000\004\000\136\000\
    \103\000\137\000\123\000\124\000\118\000\111\000\112\000\117\000\
    \040\000\088\000\101\000\135\000\090\000\089\000\102\000\091\000\
    \134\000\110\000\074\000\072\000\069\000\055\000\070\000\057\000\
    \059\000\025\000\039\000\049\000\073\000\041\000\042\000\037\000\
    \042\000\042\000\050\000\075\000\054\000\048\000\056\000\058\000\
    \038\000\053\000\051\000\067\000\066\000\052\000\061\000\071\000\
    \083\000\068\000\028\000\045\000\029\000\062\000\026\000\081\000\
    \079\000\076\000\060\000\077\000\078\000\080\000\082\000\084\000\
    \063\000\064\000\065\000\086\000\087\000\099\000\097\000\094\000\
    \092\000\096\000\098\000\100\000\106\000\105\000\095\000\104\000\
    \108\000\109\000\116\000\093\000\114\000\113\000\115\000\121\000\
    \120\000\128\000\126\000\125\000\024\000\127\000\130\000\132\000\
    \133\000\143\000\142\000\140\000\027\000\138\000\139\000\119\000\
    \023\000\141\000\145\000\129\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\042\000\000\000\000\000\255\255\000\000\043\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\007\000\000\000\000\000\000\000\005\000\
    \037\000\038\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\014\000\000\000\000\000\008\000\000\000\000\000\006\000\
    \012\000\006\000\008\000\008\000\009\000\010\000\010\000\009\000\
    \039\000\013\000\012\000\006\000\013\000\013\000\012\000\013\000\
    \006\000\010\000\015\000\015\000\016\000\018\000\016\000\017\000\
    \017\000\022\000\021\000\019\000\015\000\040\000\041\000\021\000\
    \046\000\047\000\049\000\015\000\018\000\019\000\017\000\017\000\
    \021\000\048\000\050\000\056\000\062\000\048\000\057\000\069\000\
    \072\000\056\000\022\000\044\000\022\000\057\000\022\000\073\000\
    \074\000\075\000\057\000\076\000\077\000\079\000\081\000\083\000\
    \057\000\057\000\057\000\085\000\086\000\088\000\089\000\090\000\
    \091\000\095\000\097\000\099\000\101\000\102\000\090\000\103\000\
    \107\000\108\000\110\000\090\000\111\000\112\000\114\000\117\000\
    \118\000\122\000\123\000\124\000\022\000\126\000\129\000\131\000\
    \132\000\134\000\135\000\136\000\022\000\137\000\138\000\118\000\
    \022\000\140\000\144\000\122\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\043\000\255\255\255\255\255\255\255\255\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\044\000\
    \255\255\255\255\255\255\255\255\255\255\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\255\255\255\255\255\255\255\255\255\255\255\255\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec asm_token lexbuf =
    __ocaml_lex_asm_token_rec lexbuf 0
and __ocaml_lex_asm_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 26 "opt/asmlex.mll"
                  ( ("", Lexing.lexeme lexbuf) )
# 303 "opt/asmlex.ml"

  | 1 ->
# 27 "opt/asmlex.mll"
                  ( ("INT", Lexing.lexeme lexbuf) )
# 308 "opt/asmlex.ml"

  | 2 ->
# 28 "opt/asmlex.mll"
                  ( ("", Lexing.lexeme lexbuf) )
# 313 "opt/asmlex.ml"

  | 3 ->
# 29 "opt/asmlex.mll"
                  ( ("EOI", "") )
# 318 "opt/asmlex.ml"

  | 4 ->
# 30 "opt/asmlex.mll"
                  ( ("OP2", Lexing.lexeme lexbuf) )
# 323 "opt/asmlex.ml"

  | 5 ->
# 31 "opt/asmlex.mll"
                  ( ("OP2", Lexing.lexeme lexbuf) )
# 328 "opt/asmlex.ml"

  | 6 ->
# 32 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 333 "opt/asmlex.ml"

  | 7 ->
# 33 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 338 "opt/asmlex.ml"

  | 8 ->
# 34 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 343 "opt/asmlex.ml"

  | 9 ->
# 35 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 348 "opt/asmlex.ml"

  | 10 ->
# 36 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 353 "opt/asmlex.ml"

  | 11 ->
# 37 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 358 "opt/asmlex.ml"

  | 12 ->
# 38 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 363 "opt/asmlex.ml"

  | 13 ->
# 39 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 368 "opt/asmlex.ml"

  | 14 ->
# 40 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 373 "opt/asmlex.ml"

  | 15 ->
# 41 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 378 "opt/asmlex.ml"

  | 16 ->
# 42 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 383 "opt/asmlex.ml"

  | 17 ->
# 43 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 388 "opt/asmlex.ml"

  | 18 ->
# 44 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 393 "opt/asmlex.ml"

  | 19 ->
# 45 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 398 "opt/asmlex.ml"

  | 20 ->
# 46 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 403 "opt/asmlex.ml"

  | 21 ->
# 47 "opt/asmlex.mll"
                  ( ("OP3", Lexing.lexeme lexbuf) )
# 408 "opt/asmlex.ml"

  | 22 ->
# 48 "opt/asmlex.mll"
                  ( ("FP2", Lexing.lexeme lexbuf) )
# 413 "opt/asmlex.ml"

  | 23 ->
# 49 "opt/asmlex.mll"
                  ( ("FP2", Lexing.lexeme lexbuf) )
# 418 "opt/asmlex.ml"

  | 24 ->
# 50 "opt/asmlex.mll"
                  ( ("FP2", Lexing.lexeme lexbuf) )
# 423 "opt/asmlex.ml"

  | 25 ->
# 51 "opt/asmlex.mll"
                  ( ("FP2", Lexing.lexeme lexbuf) )
# 428 "opt/asmlex.ml"

  | 26 ->
# 52 "opt/asmlex.mll"
                  ( ("FP3", Lexing.lexeme lexbuf) )
# 433 "opt/asmlex.ml"

  | 27 ->
# 53 "opt/asmlex.mll"
                  ( ("FP3", Lexing.lexeme lexbuf) )
# 438 "opt/asmlex.ml"

  | 28 ->
# 54 "opt/asmlex.mll"
                  ( ("FP3", Lexing.lexeme lexbuf) )
# 443 "opt/asmlex.ml"

  | 29 ->
# 55 "opt/asmlex.mll"
                  ( ("FP3", Lexing.lexeme lexbuf) )
# 448 "opt/asmlex.ml"

  | 30 ->
# 56 "opt/asmlex.mll"
                  ( ("MVC", "") )
# 453 "opt/asmlex.ml"

  | 31 ->
# 57 "opt/asmlex.mll"
                  ( ("LDR", "") )
# 458 "opt/asmlex.ml"

  | 32 ->
# 58 "opt/asmlex.mll"
                  ( ("STR", "") )
# 463 "opt/asmlex.ml"

  | 33 ->
# 59 "opt/asmlex.mll"
                  ( ("CMP", "") )
# 468 "opt/asmlex.ml"

  | 34 ->
# 60 "opt/asmlex.mll"
                  ( ("UCMP", "") )
# 473 "opt/asmlex.ml"

  | 35 ->
# 61 "opt/asmlex.mll"
                  ( ("BFX", "") )
# 478 "opt/asmlex.ml"

  | 36 ->
# 62 "opt/asmlex.mll"
                  ( ("BFI", "") )
# 483 "opt/asmlex.ml"

  | 37 ->
# 63 "opt/asmlex.mll"
                  ( ("STM", "") )
# 488 "opt/asmlex.ml"

  | 38 ->
# 64 "opt/asmlex.mll"
                  ( ("LDM", "") )
# 493 "opt/asmlex.ml"

  | 39 ->
# 65 "opt/asmlex.mll"
                  ( ("LDF", "") )
# 498 "opt/asmlex.ml"

  | 40 ->
# 66 "opt/asmlex.mll"
                  ( ("STF", "") )
# 503 "opt/asmlex.ml"

  | 41 ->
# 67 "opt/asmlex.mll"
                  ( ("LDMF", "") )
# 508 "opt/asmlex.ml"

  | 42 ->
# 68 "opt/asmlex.mll"
                  ( ("STMF", "") )
# 513 "opt/asmlex.ml"

  | 43 ->
# 69 "opt/asmlex.mll"
                  ( ("CALL", "") )
# 518 "opt/asmlex.ml"

  | 44 ->
# 70 "opt/asmlex.mll"
                  ( ("CBR", "") )
# 523 "opt/asmlex.ml"

  | 45 ->
# 71 "opt/asmlex.mll"
                  ( ("JUMP", "") )
# 528 "opt/asmlex.ml"

  | 46 ->
# 72 "opt/asmlex.mll"
                  ( ("RET", "") )
# 533 "opt/asmlex.ml"

  | 47 ->
# 73 "opt/asmlex.mll"
                  ( ("SWI", "") )
# 538 "opt/asmlex.ml"

  | 48 ->
# 74 "opt/asmlex.mll"
                  ( ("TRAP", "") )
# 543 "opt/asmlex.ml"

  | 49 ->
# 75 "opt/asmlex.mll"
                  ( ("UTRAP", "") )
# 548 "opt/asmlex.ml"

  | 50 ->
# 76 "opt/asmlex.mll"
                  ( ("NOP", "") )
# 553 "opt/asmlex.ml"

  | 51 ->
# 77 "opt/asmlex.mll"
                  ( ("LDT", Lexing.lexeme lexbuf) )
# 558 "opt/asmlex.ml"

  | 52 ->
# 78 "opt/asmlex.mll"
                  ( ("LDT", Lexing.lexeme lexbuf) )
# 563 "opt/asmlex.ml"

  | 53 ->
# 79 "opt/asmlex.mll"
                  ( ("LDT", Lexing.lexeme lexbuf) )
# 568 "opt/asmlex.ml"

  | 54 ->
# 80 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 573 "opt/asmlex.ml"

  | 55 ->
# 81 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 578 "opt/asmlex.ml"

  | 56 ->
# 82 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 583 "opt/asmlex.ml"

  | 57 ->
# 83 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 588 "opt/asmlex.ml"

  | 58 ->
# 84 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 593 "opt/asmlex.ml"

  | 59 ->
# 85 "opt/asmlex.mll"
                  ( ("COMP", Lexing.lexeme lexbuf) )
# 598 "opt/asmlex.ml"

  | 60 ->
# 86 "opt/asmlex.mll"
                  ( ("TRPC", Lexing.lexeme lexbuf) )
# 603 "opt/asmlex.ml"

  | 61 ->
# 87 "opt/asmlex.mll"
                  ( ("TRPC", Lexing.lexeme lexbuf) )
# 608 "opt/asmlex.ml"

  | 62 ->
# 88 "opt/asmlex.mll"
                               ( unquote (Lexing.lexeme lexbuf) )
# 613 "opt/asmlex.ml"

  | 63 ->
# 89 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDREG", String.sub str 2 ((String.length str)-2)) )
# 619 "opt/asmlex.ml"

  | 64 ->
# 91 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDFREG", String.sub str 2 ((String.length str)-2)) )
# 625 "opt/asmlex.ml"

  | 65 ->
# 93 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDIMM", String.sub str 2 ((String.length str)-2)) )
# 631 "opt/asmlex.ml"

  | 66 ->
# 95 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDDOM", String.sub str 2 ((String.length str)-2)) )
# 637 "opt/asmlex.ml"

  | 67 ->
# 97 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDNUM", String.sub str 2 ((String.length str)-2)) )
# 643 "opt/asmlex.ml"

  | 68 ->
# 99 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDHIBITS", String.sub str 2 ((String.length str)-2)) )
# 649 "opt/asmlex.ml"

  | 69 ->
# 101 "opt/asmlex.mll"
                  ( let str = Lexing.lexeme lexbuf in
                    ("QUOTEDLOBITS", String.sub str 2 ((String.length str)-2)) )
# 655 "opt/asmlex.ml"

  | 70 ->
# 103 "opt/asmlex.mll"
                  ( asm_token lexbuf )
# 660 "opt/asmlex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_asm_token_rec lexbuf __ocaml_lex_state

;;

